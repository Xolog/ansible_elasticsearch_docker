---
- name: ElasticSearch | Ensure volume path
  file:
    state: directory
    path: "{{ es_data_root }}"
    mode: 0755
    owner: 1000
    group: 0      
    recurse: true

- name: ElasticSearch | Ensure vm.max_map_count
  sysctl:
    name: vm.max_map_count
    value: "262144"
    state: present
    reload: true
  become: true

- name: Build env dict for single-node
  set_fact:
    es_env: >-
      {{
        {
          'discovery.type': 'single-node',
          'network.host': es_bind_host,
          'ELASTIC_PASSWORD': (es_enable_security | ternary(es_password, omit)),
          'ES_JAVA_OPTS': (es_heap|default('')|length>0) | ternary('-Xms' ~ es_heap ~ ' -Xmx' ~ es_heap, omit),
        }
        | combine(es_single_extra_env | default({}, true), recursive=True)
      }}

- name: ElasticSearch | Run single-node container
  docker_container:
    name: "{{ es_container_name }}"
    image: "{{ es_image_repo }}{{ '-wolfi' if es_use_wolfi else '' }}:{{ es_version }}"
    state: started
    restart_policy: unless-stopped
    networks:
      - name: "{{ es_network }}"
    healthcheck:
      test: ["CMD-SHELL", "curl --user ${ELASTIC_USER:-elastic}:${ELASTIC_PASSWORD:-secret} --silent --fail https://localhost:9200/_cluster/health -k || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    published_ports:
      - "{{ es_http_port }}:9200"
    memory: "{{ es_container_memory }}"
    ulimits:
      - "memlock:-1:-1"
      - "nofile:262144:262144"
    env: "{{ es_env }}"
    volumes:
      - "{{ es_data_root }}:/usr/share/elasticsearch/data"
  notify: restart es_single

- name: ElasticSearch | Wait generate cert in Elastic container
  community.docker.docker_container_exec:
    container: "{{ es_container_name }}"
    command: "test -f /usr/share/elasticsearch/config/certs/http_ca.crt"
  register: ca_check
  retries: 10
  delay: 5
  until: ca_check.rc == 0 
  changed_when: false
  when: es_enable_security

- name: ElasticSearch | Copy http_ca.cert from container
  when: es_enable_security
  command: >
    docker cp {{ es_container_name }}:/usr/share/elasticsearch/config/certs/http_ca.crt {{ es_data_root }}/http_ca.crt
  args:
    creates: "{{ es_data_root }}/http_ca.crt"

- name: ElasticSearch | Info for user
  debug:
    msg:
      - "Elasticsearch URL: https://<host>:{{ es_http_port }}"
      - "CACert: {{ es_data_root }}/http_ca.crt"
      - "User: elastic"

- name: Log out of DockerHub
  docker_login:
    state: absent
  when: es_use_private_registry
