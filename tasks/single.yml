---
- name: ElasticSearch | Create docker volume
  docker_volume: 
    name: "{{ es_single_vol_name }}"

- name: Build env dict for single-node
  ansible.builtin.set_fact:
    es_env: >-
      {{
        {
          'discovery.type': 'single-node',
          'xpack.security.enabled': (es_enable_security | ternary('true','false')),
          'network.host': es_bind_host,
          'ELASTIC_PASSWORD': (es_enable_security | ternary(es_password, omit)),
          'ES_JAVA_OPTS': (
            (es_heap is defined and es_heap|length > 0)
            | ternary('-Xms' ~ es_heap ~ ' -Xmx' ~ es_heap, omit)
          )
        }
        | combine(es_single_extra_env | default({}, true), recursive=True)
      }}

- name: ElasticSearch | Run single-node container
  community.docker.docker_container:
    name: "{{ es_container_name }}"
    image: "{{ es_image_repo }}{{ '-wolfi' if es_use_wolfi else '' }}:{{ es_version }}"
    state: started
    restart_policy: always
    networks:
      - name: "{{ es_network }}"
    published_ports:
      - "{{ es_http_port }}:9200"
    memory: "{{ es_container_memory }}"
    env: "{{ es_env }}"
    volumes:
      - "{{ es_single_vol_name }}:/usr/share/elasticsearch/data"
  register: es_single_started
  notify: restart es_single

- name: ElasticSearch | Copy http_ca.cert from container
  when: es_enable_security
  command: >
    docker cp {{ es_container_name }}:/usr/share/elasticsearch/config/certs/http_ca.crt {{ es_data_root }}/http_ca.crt
  args:
    creates: "{{ es_data_root }}/http_ca.cert"

- name: ElasticSearch | Info for user
  debug:
    msg:
      - "Elasticsearch URL: https://<host>:{{ es_http_port }}"
      - "CACert: {{ es_data_root }}/http_ca.crt"
      - "User: elastic"
